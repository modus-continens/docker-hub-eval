debian_variant(v) :-
  v = "stretch";
  v = "bullseye";
  v = "buster".

debian_slim_variant(v) :-
  string_concat(deb_v, "-slim", v),
  debian_variant(deb_v).

node(version, variant, arch, yarn_version) :-
  node_version(version, variant, arch, yarn_version),
  base_image(variant),
  setup_deps(variant, arch),
  (
    debian_variant(variant),
    extract_binary(variant, version, arch)
    ;
    !debian_variant(variant), alpine_binary(version, arch, checksum),
    extract_binary_alpine(version, arch, checksum)
    ;
    !debian_variant(variant), !alpine_binary(version, arch, _),
    build_from_source(version, arch)
  ).

base_image(v) :-
  debian_variant(v), !debian_slim_variant(v), from(f"buildpack-deps:${v}").
base_image(v) :-
  debian_variant(v), debian_slim_variant(v), from(f"debian:${v}-slim").
base_image(v) :-
  string_concat("alpine", alpine_version, v), from(f"alpine:${alpine_version}").

arch_str("amd64", "x64").
arch_str("ppc64el", "ppc64le").
arch_str("s390x", "s390x").
arch_str("arm64", "arm64").
arch_str("armhf", "armv7l").
arch_str("i386", "x86").

setup_deps(v, arch) :-
  debian_variant(v),
  run("groupadd --gid 1000 node \
      && useradd --uid 1000 --gid node --shell /bin/bash --create-home node"),
  (
    debian_slim_variant(v), run("true");
    !debian_slim_variant(v),
    # libatomic1 for arm
    run("apt-get update && apt-get install -y ca-certificates curl wget gnupg dirmngr xz-utils libatomic1 --no-install-recommends \
        && rm -rf /var/lib/apt/lists/*")
  ).

setup_deps(v, arch) :-
  !debian_variant(v),
  run("addgroup -g 1000 node \
      && adduser -u 1000 -G node -s /bin/sh -D node \
      && apk add --no-cache \
          libstdc++ \
      && apk add --no-cache --virtual .build-deps \
          curl").


add_gpg(key_type) :-
  # gpg keys listed at https://github.com/nodejs/node#release-keys
  gpg_key(key_type, list),
  run(f"for key in $(cat<<EOF\n${list}EOF) do \
        gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \
        gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \
      done").

extract_binary(variant, version, arch) :-
  add_gpg("node"),
  run(f"curl -fsSLO --compressed \"https://nodejs.org/dist/v${version}/node-v${version}-linux-${arch}.tar.xz\" \
    && curl -fsSLO --compressed \"https://nodejs.org/dist/v${version}/SHASUMS256.txt.asc\" \
    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
    && grep \" node-v${version}-linux-${arch}.tar.xz\\\$\" SHASUMS256.txt | sha256sum -c - \
    && tar -xJf \"node-v${version}-linux-${arch}.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \
    && rm \"node-v${version}-linux-${arch}.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt"),
  (
    debian_slim_variant(variant),
    run("apt-mark auto '.*' > /dev/null \
      && find /usr/local -type f -executable -exec ldd '{}' ';' \
        | awk '/=>/ { print $(NF-1) }' \
        | sort -u \
        | xargs -r dpkg-query --search \
        | cut -d: -f1 \
        | sort -u \
        | xargs -r apt-mark manual \
      && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false")
    ;
    !debian_slim_variant(variant), run("true")
  ),
  run("ln -s /usr/local/bin/node /usr/local/bin/nodejs").

extract_binary_alpine(version, arch, checksum) :-
  run(f"set -eu; \
    curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v${version}/node-v${version}-linux-${arch}-musl.tar.xz\"; \
    echo \"${checksum}  node-v${version}-linux-${arch}-musl.tar.xz\" | sha256sum -c - \
      && tar -xJf \"node-v${version}-linux-${arch}-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \
      && ln -s /usr/local/bin/node /usr/local/bin/nodejs;").

build_from_source(version, arch) :-
  (
    number_lt(version, "14"), python = "python2";
    !number_lt(version, "14"), python = "python3"
  ),
  run(f"apk add --no-cache --virtual .build-deps-full \
        binutils-gold \
        g++ \
        gcc \
        gnupg \
        libgcc \
        linux-headers \
        make \
        ${python}"),
  add_gpg("node"),
  run(f"curl -fsSLO --compressed \"https://nodejs.org/dist/v${version}/node-v${version}.tar.xz\" \
    && curl -fsSLO --compressed \"https://nodejs.org/dist/v${version}/SHASUMS256.txt.asc\" \
    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
    && grep \" node-v${version}.tar.xz\\\$\" SHASUMS256.txt | sha256sum -c - \
    && tar -xf \"node-v${version}.tar.xz\" \
    && cd \"node-v${version}\" \
    && ./configure \
    && make -j\$(getconf _NPROCESSORS_ONLN) V= \
    && make install \
    && apk del .build-deps-full \
    && cd .. \
    && rm -Rf \"node-v${version}\" \
    && rm \"node-v${version}.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt; \
  fi \
  && rm -f \"node-v${version}-linux-${arch}-musl.tar.xz\" \
  && apk del .build-deps
  ").
